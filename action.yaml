# action.yaml

# SPDX-FileCopyrightText: 2024 Ali Sajid Imami
#
# SPDX-License-Identifier: MIT

name: "REUSE Compliance Checker"
description: "A GitHub Action to check if a repository is compliant with the REUSE specification."
author: "Ali Sajid Imami"
branding:
  icon: "check-circle"
  color: "green"

# Define inputs for configuring the action
inputs:
  token:
    description: "GitHub token for repository access if needed."
    required: false
    default: "${{ github.token }}"

  repo-path:
    description: "Path to the repository where we run the helper tool"
    required: true
    default: "."

# Define outputs to provide a summary of compliance
outputs:
  compliance_status:
    description: "Returns 'compliant' or 'non-compliant' based on REUSE compliance check."
    value: ${{ steps.output_status.compliance_status }}
  compliance_report:
    description: "Detailed output of the REUSE compliance check."
    value: ${{ steps.output_report.compliance_report }}

# Define the action runs using composite
runs:
  using: "composite"
  steps:
    - name: Check Environment Sanity
      id: env_sanity
      shell: bash
      run: |
        echo "Checking that the environment is sane"
        echo "Python Version: $( python --version )"
        echo "Pipx Version: $( pipx --version )"
        echo "jq Version: $( jq --version )"
    - name: Setup REUSE helper tool
      id: reuse_setup
      uses: threeal/pipx-install-action@b0bf0add7d5aefda03a3d4e47d651df807889e10 # v1.0.0
      with:
        packages: reuse
    - name: Run REUSE for linting
      id: run_reuse
      shell: bash
      working-directory: ${{inputs.repo-path}}
      run: reuse lint --json > reuse_results.json
    - name: Output Compliance Report
      id: output_report
      shell: bash
      working-directory: ${{inputs.repo-path}}
      run: echo "compliance_report=$( cat reuse_results.json )" >> $GITHUB_OUTPUT
    - name: Output Compliance Status
      id: output_status
      shell: bash
      working-directory: ${{inputs.repo-path}}
      run: |
        command_status=$(cat reuse_results.json | jq '.summary.compliant')
        echo "compliance_status=$command_status" >> $GITHUB_OUTPUT
